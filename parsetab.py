
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORXORleftANDleftBIGGERleftBIGGER_EQUALleftSMALLERleftSMALLER_EQUALleftEQUALleftNOT_EQUALleft+-left*/rightuminusALEATORIO AND ATRIBUICAO BIGGER BIGGER_EQUAL CARACTER COMENTARIO DEFENITION_LOGICO DEFINITION_CARACTER DEFINITION_INTEIRO DEFINITION_REAL ELIPSIS EM ENTAO ENTRADA EQUAL ESCREVER FALSE FAZER FIM FIM_FUNCAO FIM_SE FUNCAO INTEIRO NOT NOT_EQUAL OR PARA REAL SE SENAO SMALLER SMALLER_EQUAL TRUE VAR VARS XOR code : com_list  com_list : command\n                    | com_list command  command : e \';\'\n                    | ciclo_for\n                    | callfunc \';\'\n                    | if\n                    | func  command : VARS VAR ATRIBUICAO var_list \';\'  command : ESCREVER var_list\n                    | ESCREVER e_list  ciclo_for : PARA VARS EM "[" INTEIRO ELIPSIS INTEIRO "]" FAZER com_list FIM  if : SE e ENTAO com_list FIM_SE\n                | SE e ENTAO com_list SENAO com_list FIM_SE  func : FUNCAO VAR \'(\' var_fun_list \')\' com_list FIM_FUNCAO\n                 | FUNCAO VAR \'(\' \')\' com_list FIM_FUNCAO  callfunc : VAR \'(\' e_list \')\'\n                     | VAR \'(\' \')\'   var_fun_list : var_fun\n                         | var_fun_list \',\' var_fun  var_fun : type VAR  var_list : VAR\n                     | var_list \',\' VAR  e_list : e\n                   | e_list \',\' e  e : REAL\n              | INTEIRO\n              | CARACTER\n              | condicao\n              | \'-\' e  %prec uminus   e : e \'*\' e\n              | e \'/\' e\n              | e \'+\' e\n              | e \'-\' e  e : logico\n              | e OR e\n              | e AND e\n              | e XOR e  e : \'(\' e \')\'  e : VAR  condicao : e SMALLER e\n                     | e SMALLER_EQUAL e\n                     | e BIGGER e\n                     | e BIGGER_EQUAL e\n                     | e EQUAL e\n                     | e NOT_EQUAL e  type : DEFINITION_INTEIRO\n                 | DEFINITION_REAL\n                 | DEFINITION_CARACTER\n                 | DEFENITION_LOGICO  logico : TRUE  logico : FALSE  logico : NOT logico '
    
_lr_action_items = {'VARS':([0,2,3,5,7,8,12,13,14,15,17,19,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[9,9,-2,-5,-7,-8,-26,-27,-28,-29,-35,50,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,9,-23,-25,9,9,-9,-13,9,9,9,9,9,-16,-14,-15,9,9,-12,]),'ESCREVER':([0,2,3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[11,11,-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,11,-23,-25,11,11,-9,-13,11,11,11,11,11,-16,-14,-15,11,11,-12,]),'REAL':([0,2,3,5,7,8,11,12,13,14,15,16,17,18,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[12,12,-2,-5,-7,-8,12,-26,-27,-28,-29,12,-35,12,12,-51,-52,-3,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,12,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,12,-39,12,-23,-25,12,12,-9,-13,12,12,12,12,12,-16,-14,-15,12,12,-12,]),'INTEIRO':([0,2,3,5,7,8,11,12,13,14,15,16,17,18,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,81,82,84,91,93,94,95,97,99,100,101,103,105,106,108,109,110,],[13,13,-2,-5,-7,-8,13,-26,-27,-28,-29,13,-35,13,13,-51,-52,-3,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,-6,13,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,13,-39,13,-23,-25,92,13,13,-9,-13,13,13,13,104,13,13,-16,-14,-15,13,13,-12,]),'CARACTER':([0,2,3,5,7,8,11,12,13,14,15,16,17,18,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[14,14,-2,-5,-7,-8,14,-26,-27,-28,-29,14,-35,14,14,-51,-52,-3,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,14,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,14,-39,14,-23,-25,14,14,-9,-13,14,14,14,14,14,-16,-14,-15,14,14,-12,]),'-':([0,2,3,4,5,7,8,10,11,12,13,14,15,16,17,18,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[16,16,-2,30,-5,-7,-8,-40,16,-26,-27,-28,-29,16,-35,16,16,-51,-52,-3,-4,16,16,16,16,16,16,16,16,16,16,16,16,16,-6,16,-10,-11,-22,30,-30,-40,30,30,-53,-31,-32,-33,-34,30,30,30,30,30,30,30,30,30,16,-39,16,-23,30,16,16,-9,-13,16,16,16,16,16,-16,-14,-15,16,16,-12,]),'(':([0,2,3,5,7,8,10,11,12,13,14,15,16,17,18,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[18,18,-2,-5,-7,-8,42,18,-26,-27,-28,-29,18,-35,18,18,-51,-52,-3,-4,18,18,18,18,18,18,18,18,18,18,18,18,18,-6,18,-10,-11,-22,-24,-30,-40,75,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,18,-39,18,-23,-25,18,18,-9,-13,18,18,18,18,18,-16,-14,-15,18,18,-12,]),'VAR':([0,2,3,5,7,8,9,11,12,13,14,15,16,17,18,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,72,74,79,80,82,84,86,87,88,89,90,91,93,94,95,97,100,101,103,105,106,108,109,110,],[10,10,-2,-5,-7,-8,41,45,-26,-27,-28,-29,48,-35,48,48,52,-51,-52,-3,-4,48,48,48,48,48,48,48,48,48,48,48,48,48,-6,48,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,76,79,48,-39,10,-23,-25,10,10,98,-47,-48,-49,-50,-9,-13,10,10,10,10,10,-16,-14,-15,10,10,-12,]),'PARA':([0,2,3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[19,19,-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,19,-23,-25,19,19,-9,-13,19,19,19,19,19,-16,-14,-15,19,19,-12,]),'SE':([0,2,3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[20,20,-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,20,-23,-25,20,20,-9,-13,20,20,20,20,20,-16,-14,-15,20,20,-12,]),'FUNCAO':([0,2,3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[21,21,-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,21,-23,-25,21,21,-9,-13,21,21,21,21,21,-16,-14,-15,21,21,-12,]),'TRUE':([0,2,3,5,7,8,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[22,22,-2,-5,-7,-8,22,-26,-27,-28,-29,22,-35,22,22,-51,-52,22,-3,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,-6,22,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,22,-39,22,-23,-25,22,22,-9,-13,22,22,22,22,22,-16,-14,-15,22,22,-12,]),'FALSE':([0,2,3,5,7,8,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[23,23,-2,-5,-7,-8,23,-26,-27,-28,-29,23,-35,23,23,-51,-52,23,-3,-4,23,23,23,23,23,23,23,23,23,23,23,23,23,-6,23,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,23,-39,23,-23,-25,23,23,-9,-13,23,23,23,23,23,-16,-14,-15,23,23,-12,]),'NOT':([0,2,3,5,7,8,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,74,79,80,82,84,91,93,94,95,97,100,101,103,105,106,108,109,110,],[24,24,-2,-5,-7,-8,24,-26,-27,-28,-29,24,-35,24,24,-51,-52,24,-3,-4,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,24,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,24,-39,24,-23,-25,24,24,-9,-13,24,24,24,24,24,-16,-14,-15,24,24,-12,]),'$end':([1,2,3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,79,80,91,93,103,105,106,110,],[0,-1,-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,-23,-25,-9,-13,-16,-14,-15,-12,]),'FIM_SE':([3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,79,80,82,91,93,100,103,105,106,110,],[-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,-23,-25,93,-9,-13,105,-16,-14,-15,-12,]),'SENAO':([3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,79,80,82,91,93,103,105,106,110,],[-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,-23,-25,94,-9,-13,-16,-14,-15,-12,]),'FIM_FUNCAO':([3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,79,80,91,93,97,101,103,105,106,110,],[-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,-23,-25,-9,-13,103,106,-16,-14,-15,-12,]),'FIM':([3,5,7,8,12,13,14,15,17,22,23,25,26,40,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,79,80,91,93,103,105,106,109,110,],[-2,-5,-7,-8,-26,-27,-28,-29,-35,-51,-52,-3,-4,-6,-10,-11,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,-23,-25,-9,-13,-16,-14,-15,110,-12,]),';':([4,6,10,12,13,14,15,17,22,23,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,72,76,77,78,79,],[26,40,-40,-26,-27,-28,-29,-35,-51,-52,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-18,-39,-22,91,-17,-23,]),'*':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[27,-40,-26,-27,-28,-29,-35,-51,-52,-40,27,-30,-40,27,27,-53,-31,-32,27,27,27,27,27,27,27,27,27,27,27,-39,27,]),'/':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[28,-40,-26,-27,-28,-29,-35,-51,-52,-40,28,-30,-40,28,28,-53,-31,-32,28,28,28,28,28,28,28,28,28,28,28,-39,28,]),'+':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[29,-40,-26,-27,-28,-29,-35,-51,-52,-40,29,-30,-40,29,29,-53,-31,-32,-33,-34,29,29,29,29,29,29,29,29,29,-39,29,]),'OR':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[31,-40,-26,-27,-28,-29,-35,-51,-52,-40,31,-30,-40,31,31,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,31,]),'AND':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[32,-40,-26,-27,-28,-29,-35,-51,-52,-40,32,-30,-40,32,32,-53,-31,-32,-33,-34,32,-37,32,-41,-42,-43,-44,-45,-46,-39,32,]),'XOR':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[33,-40,-26,-27,-28,-29,-35,-51,-52,-40,33,-30,-40,33,33,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,33,]),'SMALLER':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[34,-40,-26,-27,-28,-29,-35,-51,-52,-40,34,-30,-40,34,34,-53,-31,-32,-33,-34,34,34,34,-41,-42,34,34,-45,-46,-39,34,]),'SMALLER_EQUAL':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[35,-40,-26,-27,-28,-29,-35,-51,-52,-40,35,-30,-40,35,35,-53,-31,-32,-33,-34,35,35,35,35,-42,35,35,-45,-46,-39,35,]),'BIGGER':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[36,-40,-26,-27,-28,-29,-35,-51,-52,-40,36,-30,-40,36,36,-53,-31,-32,-33,-34,36,36,36,-41,-42,-43,-44,-45,-46,-39,36,]),'BIGGER_EQUAL':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[37,-40,-26,-27,-28,-29,-35,-51,-52,-40,37,-30,-40,37,37,-53,-31,-32,-33,-34,37,37,37,-41,-42,37,-44,-45,-46,-39,37,]),'EQUAL':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[38,-40,-26,-27,-28,-29,-35,-51,-52,-40,38,-30,-40,38,38,-53,-31,-32,-33,-34,38,38,38,38,38,38,38,-45,-46,-39,38,]),'NOT_EQUAL':([4,10,12,13,14,15,17,22,23,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,80,],[39,-40,-26,-27,-28,-29,-35,-51,-52,-40,39,-30,-40,39,39,-53,-31,-32,-33,-34,39,39,39,39,39,39,39,39,-46,-39,39,]),',':([12,13,14,15,17,22,23,43,44,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,76,77,79,80,83,85,98,102,],[-26,-27,-28,-29,-35,-51,-52,70,71,-22,-24,-30,-40,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,71,-39,-22,70,-23,-25,96,-19,-21,-20,]),')':([12,13,14,15,17,22,23,42,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,75,80,83,85,98,102,],[-26,-27,-28,-29,-35,-51,-52,69,-24,-30,-40,72,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,78,-39,84,-25,95,-19,-21,-20,]),'ENTAO':([12,13,14,15,17,22,23,47,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,],[-26,-27,-28,-29,-35,-51,-52,-30,-40,74,-53,-31,-32,-33,-34,-36,-37,-38,-41,-42,-43,-44,-45,-46,-39,]),'ATRIBUICAO':([41,],[67,]),'EM':([50,],[73,]),'[':([73,],[81,]),'DEFINITION_INTEIRO':([75,96,],[87,87,]),'DEFINITION_REAL':([75,96,],[88,88,]),'DEFINITION_CARACTER':([75,96,],[89,89,]),'DEFENITION_LOGICO':([75,96,],[90,90,]),'ELIPSIS':([92,],[99,]),']':([104,],[107,]),'FAZER':([107,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,],[1,]),'com_list':([0,74,84,94,95,108,],[2,82,97,100,101,109,]),'command':([0,2,74,82,84,94,95,97,100,101,108,109,],[3,25,3,25,3,3,3,25,25,25,3,25,]),'e':([0,2,11,16,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,71,74,82,84,94,95,97,100,101,108,109,],[4,4,46,47,49,51,54,55,56,57,58,59,60,61,62,63,64,65,66,46,80,4,4,4,4,4,4,4,4,4,4,]),'ciclo_for':([0,2,74,82,84,94,95,97,100,101,108,109,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'callfunc':([0,2,74,82,84,94,95,97,100,101,108,109,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,74,82,84,94,95,97,100,101,108,109,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'func':([0,2,74,82,84,94,95,97,100,101,108,109,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'condicao':([0,2,11,16,18,20,27,28,29,30,31,32,33,34,35,36,37,38,39,42,71,74,82,84,94,95,97,100,101,108,109,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'logico':([0,2,11,16,18,20,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,71,74,82,84,94,95,97,100,101,108,109,],[17,17,17,17,17,17,53,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'var_list':([11,67,],[43,77,]),'e_list':([11,42,],[44,68,]),'var_fun_list':([75,],[83,]),'var_fun':([75,96,],[85,102,]),'type':([75,96,],[86,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> com_list','code',1,'p_code1','grammar.py',37),
  ('com_list -> command','com_list',1,'p_com_list','grammar.py',41),
  ('com_list -> com_list command','com_list',2,'p_com_list','grammar.py',42),
  ('command -> e ;','command',2,'p_command1','grammar.py',50),
  ('command -> ciclo_for','command',1,'p_command1','grammar.py',51),
  ('command -> callfunc ;','command',2,'p_command1','grammar.py',52),
  ('command -> if','command',1,'p_command1','grammar.py',53),
  ('command -> func','command',1,'p_command1','grammar.py',54),
  ('command -> VARS VAR ATRIBUICAO var_list ;','command',5,'p_command2','grammar.py',58),
  ('command -> ESCREVER var_list','command',2,'p_command3','grammar.py',64),
  ('command -> ESCREVER e_list','command',2,'p_command3','grammar.py',65),
  ('ciclo_for -> PARA VARS EM [ INTEIRO ELIPSIS INTEIRO ] FAZER com_list FIM','ciclo_for',11,'p_ciclo_for','grammar.py',69),
  ('if -> SE e ENTAO com_list FIM_SE','if',5,'p_if','grammar.py',88),
  ('if -> SE e ENTAO com_list SENAO com_list FIM_SE','if',7,'p_if','grammar.py',89),
  ('func -> FUNCAO VAR ( var_fun_list ) com_list FIM_FUNCAO','func',7,'p_func','grammar.py',104),
  ('func -> FUNCAO VAR ( ) com_list FIM_FUNCAO','func',6,'p_func','grammar.py',105),
  ('callfunc -> VAR ( e_list )','callfunc',4,'p_callfunc','grammar.py',120),
  ('callfunc -> VAR ( )','callfunc',3,'p_callfunc','grammar.py',121),
  ('var_fun_list -> var_fun','var_fun_list',1,'p_var_fun_list','grammar.py',127),
  ('var_fun_list -> var_fun_list , var_fun','var_fun_list',3,'p_var_fun_list','grammar.py',128),
  ('var_fun -> type VAR','var_fun',2,'p_var_fun','grammar.py',135),
  ('var_list -> VAR','var_list',1,'p_var_list','grammar.py',140),
  ('var_list -> var_list , VAR','var_list',3,'p_var_list','grammar.py',141),
  ('e_list -> e','e_list',1,'p_e_list','grammar.py',148),
  ('e_list -> e_list , e','e_list',3,'p_e_list','grammar.py',149),
  ('e -> REAL','e',1,'p_e1','grammar.py',156),
  ('e -> INTEIRO','e',1,'p_e1','grammar.py',157),
  ('e -> CARACTER','e',1,'p_e1','grammar.py',158),
  ('e -> condicao','e',1,'p_e1','grammar.py',159),
  ('e -> - e','e',2,'p_e1','grammar.py',160),
  ('e -> e * e','e',3,'p_e2','grammar.py',164),
  ('e -> e / e','e',3,'p_e2','grammar.py',165),
  ('e -> e + e','e',3,'p_e2','grammar.py',166),
  ('e -> e - e','e',3,'p_e2','grammar.py',167),
  ('e -> logico','e',1,'p_e3','grammar.py',171),
  ('e -> e OR e','e',3,'p_e3','grammar.py',172),
  ('e -> e AND e','e',3,'p_e3','grammar.py',173),
  ('e -> e XOR e','e',3,'p_e3','grammar.py',174),
  ('e -> ( e )','e',3,'p_e4','grammar.py',181),
  ('e -> VAR','e',1,'p_e5','grammar.py',185),
  ('condicao -> e SMALLER e','condicao',3,'p_condicao','grammar.py',189),
  ('condicao -> e SMALLER_EQUAL e','condicao',3,'p_condicao','grammar.py',190),
  ('condicao -> e BIGGER e','condicao',3,'p_condicao','grammar.py',191),
  ('condicao -> e BIGGER_EQUAL e','condicao',3,'p_condicao','grammar.py',192),
  ('condicao -> e EQUAL e','condicao',3,'p_condicao','grammar.py',193),
  ('condicao -> e NOT_EQUAL e','condicao',3,'p_condicao','grammar.py',194),
  ('type -> DEFINITION_INTEIRO','type',1,'p_type','grammar.py',198),
  ('type -> DEFINITION_REAL','type',1,'p_type','grammar.py',199),
  ('type -> DEFINITION_CARACTER','type',1,'p_type','grammar.py',200),
  ('type -> DEFENITION_LOGICO','type',1,'p_type','grammar.py',201),
  ('logico -> TRUE','logico',1,'p_l1','grammar.py',205),
  ('logico -> FALSE','logico',1,'p_l2','grammar.py',209),
  ('logico -> NOT logico','logico',2,'p_l3','grammar.py',213),
]
