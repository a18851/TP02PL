
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*rightsimetricoALEATORIO ATRIBUICAO COMENTARIO COMENTARIO_MULTILINHA ELIPSIS EM ENTRADA ESCREVER FAZER FIM IDENTIFICADOR NUMERO PARA STRING VAR S : LstV ';'  LstV :  LstV ';' Inst  LstV :  Inst  Inst : V   Inst :  ESCREVER E   Inst : ESCREVER STRING  V : IDENTIFICADOR ATRIBUICAO E  E : E '+' E\n              | E '-' E\n              | E '*' E\n              | E ':' E  E : '-' E   %prec simetrico  E : '(' E ')'  E :  NUMERO   E :  IDENTIFICADOR  "
    
_lr_action_items = {'ESCREVER':([0,7,],[5,5,]),'IDENTIFICADOR':([0,5,7,10,11,14,16,17,18,19,],[6,13,6,13,13,13,13,13,13,13,]),'$end':([1,7,],[0,-1,]),';':([2,3,4,8,9,12,13,15,20,22,23,24,25,26,27,],[7,-3,-4,-5,-6,-14,-15,-2,-12,-7,-8,-9,-10,-11,-13,]),'STRING':([5,],[9,]),'-':([5,8,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,],[10,17,10,10,-14,-15,10,10,10,10,10,-12,17,17,-8,-9,-10,17,-13,]),'(':([5,10,11,14,16,17,18,19,],[11,11,11,11,11,11,11,11,]),'NUMERO':([5,10,11,14,16,17,18,19,],[12,12,12,12,12,12,12,12,]),'ATRIBUICAO':([6,],[14,]),'+':([8,12,13,20,21,22,23,24,25,26,27,],[16,-14,-15,-12,16,16,-8,-9,-10,16,-13,]),'*':([8,12,13,20,21,22,23,24,25,26,27,],[18,-14,-15,-12,18,18,18,18,-10,18,-13,]),':':([8,12,13,20,21,22,23,24,25,26,27,],[19,-14,-15,-12,19,19,-8,-9,-10,19,-13,]),')':([12,13,20,21,23,24,25,26,27,],[-14,-15,-12,27,-8,-9,-10,-11,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'LstV':([0,],[2,]),'Inst':([0,7,],[3,15,]),'V':([0,7,],[4,4,]),'E':([5,10,11,14,16,17,18,19,],[8,20,21,22,23,24,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> LstV ;','S',2,'p_s','grammar.py',133),
  ('LstV -> LstV ; Inst','LstV',3,'p_expr_tail','grammar.py',138),
  ('LstV -> Inst','LstV',1,'p_expr_head','grammar.py',145),
  ('Inst -> V','Inst',1,'p_expr_inst_atr','grammar.py',150),
  ('Inst -> ESCREVER E','Inst',2,'p_expr_inst_esc','grammar.py',155),
  ('Inst -> ESCREVER STRING','Inst',2,'p_expr_inst_esc2','grammar.py',159),
  ('V -> IDENTIFICADOR ATRIBUICAO E','V',3,'p_expr_atrib','grammar.py',163),
  ('E -> E + E','E',3,'p_expr_op','grammar.py',168),
  ('E -> E - E','E',3,'p_expr_op','grammar.py',169),
  ('E -> E * E','E',3,'p_expr_op','grammar.py',170),
  ('E -> E : E','E',3,'p_expr_op','grammar.py',171),
  ('E -> - E','E',2,'p_expr_sinalmenos','grammar.py',176),
  ('E -> ( E )','E',3,'p_expr_pare','grammar.py',182),
  ('E -> NUMERO','E',1,'p_expr_num','grammar.py',187),
  ('E -> IDENTIFICADOR','E',1,'p_expr_var','grammar.py',192),
]
