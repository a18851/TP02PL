
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORXORleftANDleftBIGGERBIGGER_EQUALSMALLERSMALLER_EQUALEQUALNOT_EQUALleft+-left*/rightuminusAND ATRIBUICAO BIGGER BIGGER_EQUAL CARACTER DEFENITION_LOGICO DEFINITION_CARACTER DEFINITION_INTEIRO DEFINITION_REAL ELIPSIS EM ENTAO EQUAL ESCREVER FALSE FAZER FIM FIM_FUNCAO FIM_SE FUNCAO ID INTEIRO NOT NOT_EQUAL OR PARA REAL SE SENAO SMALLER SMALLER_EQUAL STRING TRUE V VAR XOR S : LstV \';\'  LstV :  LstV \';\' command  LstV :  com_list  com_list : command\n                    | com_list command  command : V STRING ATRIBUICAO var_list   command : ESCREVER STRING \';\'\n                    | ESCREVER e\n                    | ESCREVER var_list  command : ID ATRIBUICAO e_list  command : ciclo_for\n                    | callfunc \';\'\n                    | if\n                    | func  ciclo_for : PARA ID EM "[" INTEIRO ELIPSIS INTEIRO "]" FAZER com_list FIM  if : SE e ENTAO com_list FIM_SE\n                | SE e ENTAO com_list SENAO com_list FIM_SE  func : FUNCAO VAR \'(\' var_fun_list \')\' com_list FIM_FUNCAO\n                 | FUNCAO VAR \'(\' \')\' com_list FIM_FUNCAO  callfunc : VAR \'(\' e_list \')\'\n                     | VAR \'(\' \')\'   var_fun_list : var_fun\n                         | var_fun_list \',\' var_fun  var_fun : type VAR  var_list : VAR\n                     | var_list \',\' VAR  e_list : e\n                   | e_list \',\' e  e : ID\n              | REAL\n              | INTEIRO\n              | CARACTER\n              | condicao\n              | \'-\' e  %prec uminus   e : e \'*\' e\n              | e \'/\' e\n              | e \'+\' e\n              | e \'-\' e  e : logico\n              | e OR e\n              | e AND e\n              | e XOR e  e : \'(\' e \')\'  condicao : e SMALLER e\n                     | e SMALLER_EQUAL e\n                     | e BIGGER e\n                     | e BIGGER_EQUAL e\n                     | e EQUAL e\n                     | e NOT_EQUAL e  type : DEFINITION_INTEIRO\n                 | DEFINITION_REAL\n                 | DEFINITION_CARACTER\n                 | DEFENITION_LOGICO  logico : TRUE  logico : FALSE  logico : NOT logico '
    
_lr_action_items = {'V':([0,3,4,8,10,11,16,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,88,95,97,98,99,101,104,105,107,109,110,112,113,114,],[5,-4,5,-11,-13,-14,5,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,5,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,5,5,-28,-16,5,5,5,5,5,-19,-17,-18,5,5,-15,]),'ESCREVER':([0,3,4,8,10,11,16,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,88,95,97,98,99,101,104,105,107,109,110,112,113,114,],[6,-4,6,-11,-13,-14,6,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,6,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,6,6,-28,-16,6,6,6,6,6,-19,-17,-18,6,6,-15,]),'ID':([0,3,4,6,8,10,11,12,14,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,88,95,97,98,99,101,104,105,107,109,110,112,113,114,],[7,-4,7,22,-11,-13,-14,36,22,7,-5,-8,-9,-29,-30,-31,-32,-33,22,-39,22,-25,-54,-55,22,-12,22,-7,22,22,22,22,22,22,22,22,22,22,22,22,22,-34,-56,-10,-27,7,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,22,7,7,-28,-16,7,7,7,7,7,-19,-17,-18,7,7,-15,]),'PARA':([0,3,4,8,10,11,16,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,88,95,97,98,99,101,104,105,107,109,110,112,113,114,],[12,-4,12,-11,-13,-14,12,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,12,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,12,12,-28,-16,12,12,12,12,12,-19,-17,-18,12,12,-15,]),'VAR':([0,3,4,6,8,10,11,15,16,17,20,21,22,23,24,25,26,28,30,31,32,35,41,42,56,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,88,90,91,92,93,94,95,97,98,99,101,104,105,107,109,110,112,113,114,],[13,-4,13,30,-11,-13,-14,39,13,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,30,-7,81,-34,-56,-10,-27,13,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,13,13,102,-50,-51,-52,-53,-28,-16,13,13,13,13,13,-19,-17,-18,13,13,-15,]),'SE':([0,3,4,8,10,11,16,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,88,95,97,98,99,101,104,105,107,109,110,112,113,114,],[14,-4,14,-11,-13,-14,14,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,14,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,14,14,-28,-16,14,14,14,14,14,-19,-17,-18,14,14,-15,]),'FUNCAO':([0,3,4,8,10,11,16,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,88,95,97,98,99,101,104,105,107,109,110,112,113,114,],[15,-4,15,-11,-13,-14,15,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,15,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,15,15,-28,-16,15,15,15,15,15,-19,-17,-18,15,15,-15,]),'$end':([1,16,],[0,-1,]),';':([2,3,4,8,9,10,11,17,19,20,21,22,23,24,25,26,28,30,31,32,35,40,42,57,59,60,61,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,95,97,107,109,110,114,],[16,-4,-3,-11,35,-13,-14,-5,42,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-2,-7,-34,-56,-10,-27,-21,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,-20,-28,-16,-19,-17,-18,-15,]),'FIM_SE':([3,8,10,11,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,95,97,104,107,109,110,114,],[-4,-11,-13,-14,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,97,-28,-16,109,-19,-17,-18,-15,]),'SENAO':([3,8,10,11,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,95,97,107,109,110,114,],[-4,-11,-13,-14,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,98,-28,-16,-19,-17,-18,-15,]),'FIM_FUNCAO':([3,8,10,11,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,95,97,101,105,107,109,110,114,],[-4,-11,-13,-14,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,-28,-16,107,110,-19,-17,-18,-15,]),'FIM':([3,8,10,11,17,20,21,22,23,24,25,26,28,30,31,32,35,42,57,59,60,61,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,95,97,107,109,110,113,114,],[-4,-11,-13,-14,-5,-8,-9,-29,-30,-31,-32,-33,-39,-25,-54,-55,-12,-7,-34,-56,-10,-27,-6,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,-28,-16,-19,-17,-18,114,-15,]),'STRING':([5,6,],[18,19,]),'REAL':([6,14,27,29,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'INTEIRO':([6,14,27,29,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,84,103,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,96,108,]),'CARACTER':([6,14,27,29,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'-':([6,14,20,22,23,24,25,26,27,28,29,31,32,34,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,95,],[27,27,46,-29,-30,-31,-32,-33,27,-39,27,-54,-55,27,27,46,27,27,27,27,27,27,27,27,27,27,27,27,27,-34,46,-56,46,-35,-36,-37,-38,46,46,46,46,46,46,46,46,46,-43,27,46,]),'(':([6,13,14,27,29,34,37,39,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[29,37,29,29,29,29,29,66,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TRUE':([6,14,27,29,33,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([6,14,27,29,33,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'NOT':([6,14,27,29,33,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ATRIBUICAO':([7,18,],[34,41,]),'*':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[43,-29,-30,-31,-32,-33,-39,-54,-55,43,-34,43,-56,43,-35,-36,43,43,43,43,43,43,43,43,43,43,43,-43,43,]),'/':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[44,-29,-30,-31,-32,-33,-39,-54,-55,44,-34,44,-56,44,-35,-36,44,44,44,44,44,44,44,44,44,44,44,-43,44,]),'+':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[45,-29,-30,-31,-32,-33,-39,-54,-55,45,-34,45,-56,45,-35,-36,-37,-38,45,45,45,45,45,45,45,45,45,-43,45,]),'OR':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[47,-29,-30,-31,-32,-33,-39,-54,-55,47,-34,47,-56,47,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-43,47,]),'AND':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[48,-29,-30,-31,-32,-33,-39,-54,-55,48,-34,48,-56,48,-35,-36,-37,-38,48,-41,48,-44,-45,-46,-47,-48,-49,-43,48,]),'XOR':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[49,-29,-30,-31,-32,-33,-39,-54,-55,49,-34,49,-56,49,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-43,49,]),'SMALLER':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[50,-29,-30,-31,-32,-33,-39,-54,-55,50,-34,50,-56,50,-35,-36,-37,-38,50,50,50,-44,-45,-46,-47,-48,-49,-43,50,]),'SMALLER_EQUAL':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[51,-29,-30,-31,-32,-33,-39,-54,-55,51,-34,51,-56,51,-35,-36,-37,-38,51,51,51,-44,-45,-46,-47,-48,-49,-43,51,]),'BIGGER':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[52,-29,-30,-31,-32,-33,-39,-54,-55,52,-34,52,-56,52,-35,-36,-37,-38,52,52,52,-44,-45,-46,-47,-48,-49,-43,52,]),'BIGGER_EQUAL':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[53,-29,-30,-31,-32,-33,-39,-54,-55,53,-34,53,-56,53,-35,-36,-37,-38,53,53,53,-44,-45,-46,-47,-48,-49,-43,53,]),'EQUAL':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[54,-29,-30,-31,-32,-33,-39,-54,-55,54,-34,54,-56,54,-35,-36,-37,-38,54,54,54,-44,-45,-46,-47,-48,-49,-43,54,]),'NOT_EQUAL':([20,22,23,24,25,26,28,31,32,38,57,58,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,82,95,],[55,-29,-30,-31,-32,-33,-39,-54,-55,55,-34,55,-56,55,-35,-36,-37,-38,55,55,55,-44,-45,-46,-47,-48,-49,-43,55,]),',':([21,22,23,24,25,26,28,30,31,32,57,59,60,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,95,102,106,],[56,-29,-30,-31,-32,-33,-39,-25,-54,-55,-34,-56,83,-27,83,56,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-26,-43,100,-22,-28,-24,-23,]),'ENTAO':([22,23,24,25,26,28,31,32,38,57,59,68,69,70,71,72,73,74,75,76,77,78,79,80,82,],[-29,-30,-31,-32,-33,-39,-54,-55,65,-34,-56,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-43,]),')':([22,23,24,25,26,28,31,32,37,57,58,59,61,63,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,89,95,102,106,],[-29,-30,-31,-32,-33,-39,-54,-55,64,-34,82,-56,-27,85,88,-35,-36,-37,-38,-40,-41,-42,-44,-45,-46,-47,-48,-49,-43,99,-22,-28,-24,-23,]),'EM':([36,],[62,]),'[':([62,],[84,]),'DEFINITION_INTEIRO':([66,100,],[91,91,]),'DEFINITION_REAL':([66,100,],[92,92,]),'DEFINITION_CARACTER':([66,100,],[93,93,]),'DEFENITION_LOGICO':([66,100,],[94,94,]),'ELIPSIS':([96,],[103,]),']':([108,],[111,]),'FAZER':([111,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'LstV':([0,],[2,]),'command':([0,4,16,65,86,88,98,99,101,104,105,112,113,],[3,17,40,3,17,3,3,3,17,17,17,3,17,]),'com_list':([0,65,88,98,99,112,],[4,86,101,104,105,113,]),'ciclo_for':([0,4,16,65,86,88,98,99,101,104,105,112,113,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'callfunc':([0,4,16,65,86,88,98,99,101,104,105,112,113,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'if':([0,4,16,65,86,88,98,99,101,104,105,112,113,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'func':([0,4,16,65,86,88,98,99,101,104,105,112,113,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'e':([6,14,27,29,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[20,38,57,58,61,61,68,69,70,71,72,73,74,75,76,77,78,79,80,95,]),'var_list':([6,41,],[21,67,]),'condicao':([6,14,27,29,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'logico':([6,14,27,29,33,34,37,43,44,45,46,47,48,49,50,51,52,53,54,55,83,],[28,28,28,28,59,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'e_list':([34,37,],[60,63,]),'var_fun_list':([66,],[87,]),'var_fun':([66,100,],[89,106,]),'type':([66,100,],[90,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> LstV ;','S',2,'p_s','grammar.py',32),
  ('LstV -> LstV ; command','LstV',3,'p_expr_tail','grammar.py',36),
  ('LstV -> com_list','LstV',1,'p_expr_head','grammar.py',42),
  ('com_list -> command','com_list',1,'p_com_list','grammar.py',46),
  ('com_list -> com_list command','com_list',2,'p_com_list','grammar.py',47),
  ('command -> V STRING ATRIBUICAO var_list','command',4,'p_command1','grammar.py',54),
  ('command -> ESCREVER STRING ;','command',3,'p_command2','grammar.py',60),
  ('command -> ESCREVER e','command',2,'p_command2','grammar.py',61),
  ('command -> ESCREVER var_list','command',2,'p_command2','grammar.py',62),
  ('command -> ID ATRIBUICAO e_list','command',3,'p_command3','grammar.py',66),
  ('command -> ciclo_for','command',1,'p_command4','grammar.py',72),
  ('command -> callfunc ;','command',2,'p_command4','grammar.py',73),
  ('command -> if','command',1,'p_command4','grammar.py',74),
  ('command -> func','command',1,'p_command4','grammar.py',75),
  ('ciclo_for -> PARA ID EM [ INTEIRO ELIPSIS INTEIRO ] FAZER com_list FIM','ciclo_for',11,'p_ciclo_for','grammar.py',79),
  ('if -> SE e ENTAO com_list FIM_SE','if',5,'p_if','grammar.py',98),
  ('if -> SE e ENTAO com_list SENAO com_list FIM_SE','if',7,'p_if','grammar.py',99),
  ('func -> FUNCAO VAR ( var_fun_list ) com_list FIM_FUNCAO','func',7,'p_func','grammar.py',114),
  ('func -> FUNCAO VAR ( ) com_list FIM_FUNCAO','func',6,'p_func','grammar.py',115),
  ('callfunc -> VAR ( e_list )','callfunc',4,'p_callfunc','grammar.py',130),
  ('callfunc -> VAR ( )','callfunc',3,'p_callfunc','grammar.py',131),
  ('var_fun_list -> var_fun','var_fun_list',1,'p_var_fun_list','grammar.py',137),
  ('var_fun_list -> var_fun_list , var_fun','var_fun_list',3,'p_var_fun_list','grammar.py',138),
  ('var_fun -> type VAR','var_fun',2,'p_var_fun','grammar.py',145),
  ('var_list -> VAR','var_list',1,'p_var_list','grammar.py',150),
  ('var_list -> var_list , VAR','var_list',3,'p_var_list','grammar.py',151),
  ('e_list -> e','e_list',1,'p_e_list','grammar.py',158),
  ('e_list -> e_list , e','e_list',3,'p_e_list','grammar.py',159),
  ('e -> ID','e',1,'p_e1','grammar.py',166),
  ('e -> REAL','e',1,'p_e1','grammar.py',167),
  ('e -> INTEIRO','e',1,'p_e1','grammar.py',168),
  ('e -> CARACTER','e',1,'p_e1','grammar.py',169),
  ('e -> condicao','e',1,'p_e1','grammar.py',170),
  ('e -> - e','e',2,'p_e1','grammar.py',171),
  ('e -> e * e','e',3,'p_e2','grammar.py',178),
  ('e -> e / e','e',3,'p_e2','grammar.py',179),
  ('e -> e + e','e',3,'p_e2','grammar.py',180),
  ('e -> e - e','e',3,'p_e2','grammar.py',181),
  ('e -> logico','e',1,'p_e3','grammar.py',185),
  ('e -> e OR e','e',3,'p_e3','grammar.py',186),
  ('e -> e AND e','e',3,'p_e3','grammar.py',187),
  ('e -> e XOR e','e',3,'p_e3','grammar.py',188),
  ('e -> ( e )','e',3,'p_e4','grammar.py',195),
  ('condicao -> e SMALLER e','condicao',3,'p_condicao','grammar.py',199),
  ('condicao -> e SMALLER_EQUAL e','condicao',3,'p_condicao','grammar.py',200),
  ('condicao -> e BIGGER e','condicao',3,'p_condicao','grammar.py',201),
  ('condicao -> e BIGGER_EQUAL e','condicao',3,'p_condicao','grammar.py',202),
  ('condicao -> e EQUAL e','condicao',3,'p_condicao','grammar.py',203),
  ('condicao -> e NOT_EQUAL e','condicao',3,'p_condicao','grammar.py',204),
  ('type -> DEFINITION_INTEIRO','type',1,'p_type','grammar.py',208),
  ('type -> DEFINITION_REAL','type',1,'p_type','grammar.py',209),
  ('type -> DEFINITION_CARACTER','type',1,'p_type','grammar.py',210),
  ('type -> DEFENITION_LOGICO','type',1,'p_type','grammar.py',211),
  ('logico -> TRUE','logico',1,'p_l1','grammar.py',215),
  ('logico -> FALSE','logico',1,'p_l2','grammar.py',219),
  ('logico -> NOT logico','logico',2,'p_l3','grammar.py',223),
]
