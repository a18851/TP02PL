
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORXORleftANDleftBIGGERBIGGER_EQUALSMALLERSMALLER_EQUALEQUALNOT_EQUALleft+-left*/rightuminusAND ATRIBUICAO BIGGER BIGGER_EQUAL CARACTER DEFENITION_LOGICO DEFINITION_CARACTER DEFINITION_INTEIRO DEFINITION_REAL ELIPSIS EM ENTAO EQUAL ESCREVER FALSE FAZER FIM FIM_FUNCAO FIM_SE FUNCAO ID INTEIRO NOT NOT_EQUAL OR PARA REAL SE SENAO SMALLER SMALLER_EQUAL STRING TRUE V VAR XOR S : LstV \';\'  LstV :  LstV \';\' command  LstV :  com_list  com_list : command\n                    | com_list command  command : V STRING\n                    | V STRING ATRIBUICAO var_list   command : ESCREVER STRING \';\'\n                    | ESCREVER e\n                    | ESCREVER var_list  command : ID ATRIBUICAO e_list  command : ciclo_for\n                    | if\n                     ciclo_for : PARA ID EM "[" INTEIRO ELIPSIS INTEIRO "]" FAZER com_list FIM  if : SE e ENTAO com_list FIM_SE\n                | SE e ENTAO com_list SENAO com_list FIM_SE  var_list : VAR\n                     | var_list \',\' VAR  e_list : e\n                   | e_list \',\' e  e : ID\n              | REAL\n              | INTEIRO\n              | CARACTER\n              | condicao\n              | \'-\' e  %prec uminus   e : e \'*\' e\n              | e \'/\' e\n              | e \'+\' e\n              | e \'-\' e  e : logico\n              | e OR e\n              | e AND e\n              | e XOR e  e : \'(\' e \')\'  condicao : e SMALLER e\n                     | e SMALLER_EQUAL e\n                     | e BIGGER e\n                     | e BIGGER_EQUAL e\n                     | e EQUAL e\n                     | e NOT_EQUAL e  logico : TRUE  logico : FALSE  logico : NOT logico '
    
_lr_action_items = {'V':([0,3,4,8,9,12,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,78,79,81,83,85,86,87,],[5,-4,5,-12,-13,5,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,5,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,5,-20,-15,5,5,-16,5,5,-14,]),'ESCREVER':([0,3,4,8,9,12,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,78,79,81,83,85,86,87,],[6,-4,6,-12,-13,6,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,6,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,6,-20,-15,6,6,-16,6,6,-14,]),'ID':([0,3,4,6,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,78,79,81,83,85,86,87,],[7,-4,7,18,-12,-13,31,18,7,-5,-6,-9,-10,-21,-22,-23,-24,-25,18,-31,18,-17,-42,-43,18,-8,18,18,18,18,18,18,18,18,18,18,18,18,18,-26,-44,-11,-19,7,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,18,7,-20,-15,7,7,-16,7,7,-14,]),'PARA':([0,3,4,8,9,12,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,78,79,81,83,85,86,87,],[10,-4,10,-12,-13,10,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,10,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,10,-20,-15,10,10,-16,10,10,-14,]),'SE':([0,3,4,8,9,12,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,78,79,81,83,85,86,87,],[11,-4,11,-12,-13,11,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,11,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,11,-20,-15,11,11,-16,11,11,-14,]),'$end':([1,12,],[0,-1,]),';':([2,3,4,8,9,13,14,15,16,17,18,19,20,21,22,24,26,27,28,33,35,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,83,87,],[12,-4,-3,-12,-13,-5,-6,35,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-2,-8,-26,-44,-11,-19,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,-20,-15,-16,-14,]),'FIM_SE':([3,8,9,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,78,81,83,87,],[-4,-12,-13,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,78,-20,-15,83,-16,-14,]),'SENAO':([3,8,9,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,78,83,87,],[-4,-12,-13,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,79,-20,-15,-16,-14,]),'FIM':([3,8,9,13,14,16,17,18,19,20,21,22,24,26,27,28,35,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,83,86,87,],[-4,-12,-13,-5,-6,-9,-10,-21,-22,-23,-24,-25,-31,-17,-42,-43,-8,-26,-44,-11,-19,-7,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,-20,-15,-16,87,-14,]),'STRING':([5,6,],[14,15,]),'REAL':([6,11,23,25,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'INTEIRO':([6,11,23,25,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,74,80,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,77,82,]),'CARACTER':([6,11,23,25,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'-':([6,11,16,18,19,20,21,22,23,24,25,27,28,30,32,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,76,],[23,23,39,-21,-22,-23,-24,-25,23,-31,23,-42,-43,23,39,23,23,23,23,23,23,23,23,23,23,23,23,23,-26,39,-44,39,-27,-28,-29,-30,39,39,39,39,39,39,39,39,39,-35,23,39,]),'(':([6,11,23,25,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'VAR':([6,34,49,],[26,26,71,]),'TRUE':([6,11,23,25,29,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FALSE':([6,11,23,25,29,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NOT':([6,11,23,25,29,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ATRIBUICAO':([7,14,],[30,34,]),'*':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[36,-21,-22,-23,-24,-25,-31,-42,-43,36,-26,36,-44,36,-27,-28,36,36,36,36,36,36,36,36,36,36,36,-35,36,]),'/':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[37,-21,-22,-23,-24,-25,-31,-42,-43,37,-26,37,-44,37,-27,-28,37,37,37,37,37,37,37,37,37,37,37,-35,37,]),'+':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[38,-21,-22,-23,-24,-25,-31,-42,-43,38,-26,38,-44,38,-27,-28,-29,-30,38,38,38,38,38,38,38,38,38,-35,38,]),'OR':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[40,-21,-22,-23,-24,-25,-31,-42,-43,40,-26,40,-44,40,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-35,40,]),'AND':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[41,-21,-22,-23,-24,-25,-31,-42,-43,41,-26,41,-44,41,-27,-28,-29,-30,41,-33,41,-36,-37,-38,-39,-40,-41,-35,41,]),'XOR':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[42,-21,-22,-23,-24,-25,-31,-42,-43,42,-26,42,-44,42,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-35,42,]),'SMALLER':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[43,-21,-22,-23,-24,-25,-31,-42,-43,43,-26,43,-44,43,-27,-28,-29,-30,43,43,43,-36,-37,-38,-39,-40,-41,-35,43,]),'SMALLER_EQUAL':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[44,-21,-22,-23,-24,-25,-31,-42,-43,44,-26,44,-44,44,-27,-28,-29,-30,44,44,44,-36,-37,-38,-39,-40,-41,-35,44,]),'BIGGER':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[45,-21,-22,-23,-24,-25,-31,-42,-43,45,-26,45,-44,45,-27,-28,-29,-30,45,45,45,-36,-37,-38,-39,-40,-41,-35,45,]),'BIGGER_EQUAL':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[46,-21,-22,-23,-24,-25,-31,-42,-43,46,-26,46,-44,46,-27,-28,-29,-30,46,46,46,-36,-37,-38,-39,-40,-41,-35,46,]),'EQUAL':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[47,-21,-22,-23,-24,-25,-31,-42,-43,47,-26,47,-44,47,-27,-28,-29,-30,47,47,47,-36,-37,-38,-39,-40,-41,-35,47,]),'NOT_EQUAL':([16,18,19,20,21,22,24,27,28,32,50,51,52,54,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,],[48,-21,-22,-23,-24,-25,-31,-42,-43,48,-26,48,-44,48,-27,-28,-29,-30,48,48,48,-36,-37,-38,-39,-40,-41,-35,48,]),',':([17,18,19,20,21,22,24,26,27,28,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,],[49,-21,-22,-23,-24,-25,-31,-17,-42,-43,-26,-44,73,-19,49,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-18,-35,-20,]),'ENTAO':([18,19,20,21,22,24,27,28,32,50,52,58,59,60,61,62,63,64,65,66,67,68,69,70,72,],[-21,-22,-23,-24,-25,-31,-42,-43,56,-26,-44,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-35,]),')':([18,19,20,21,22,24,27,28,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,72,],[-21,-22,-23,-24,-25,-31,-42,-43,-26,72,-44,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,-41,-35,]),'EM':([31,],[55,]),'[':([55,],[74,]),'ELIPSIS':([77,],[80,]),']':([82,],[84,]),'FAZER':([84,],[85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'LstV':([0,],[2,]),'command':([0,4,12,56,75,79,81,85,86,],[3,13,33,3,13,3,13,3,13,]),'com_list':([0,56,79,85,],[4,75,81,86,]),'ciclo_for':([0,4,12,56,75,79,81,85,86,],[8,8,8,8,8,8,8,8,8,]),'if':([0,4,12,56,75,79,81,85,86,],[9,9,9,9,9,9,9,9,9,]),'e':([6,11,23,25,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[16,32,50,51,54,58,59,60,61,62,63,64,65,66,67,68,69,70,76,]),'var_list':([6,34,],[17,57,]),'condicao':([6,11,23,25,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'logico':([6,11,23,25,29,30,36,37,38,39,40,41,42,43,44,45,46,47,48,73,],[24,24,24,24,52,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'e_list':([30,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> LstV ;','S',2,'p_s','grammar.py',32),
  ('LstV -> LstV ; command','LstV',3,'p_expr_tail','grammar.py',36),
  ('LstV -> com_list','LstV',1,'p_expr_head','grammar.py',42),
  ('com_list -> command','com_list',1,'p_com_list','grammar.py',46),
  ('com_list -> com_list command','com_list',2,'p_com_list','grammar.py',47),
  ('command -> V STRING','command',2,'p_command1','grammar.py',54),
  ('command -> V STRING ATRIBUICAO var_list','command',4,'p_command1','grammar.py',55),
  ('command -> ESCREVER STRING ;','command',3,'p_command2','grammar.py',61),
  ('command -> ESCREVER e','command',2,'p_command2','grammar.py',62),
  ('command -> ESCREVER var_list','command',2,'p_command2','grammar.py',63),
  ('command -> ID ATRIBUICAO e_list','command',3,'p_command3','grammar.py',67),
  ('command -> ciclo_for','command',1,'p_command4','grammar.py',73),
  ('command -> if','command',1,'p_command4','grammar.py',74),
  ('ciclo_for -> PARA ID EM [ INTEIRO ELIPSIS INTEIRO ] FAZER com_list FIM','ciclo_for',11,'p_ciclo_for','grammar.py',81),
  ('if -> SE e ENTAO com_list FIM_SE','if',5,'p_if','grammar.py',100),
  ('if -> SE e ENTAO com_list SENAO com_list FIM_SE','if',7,'p_if','grammar.py',101),
  ('var_list -> VAR','var_list',1,'p_var_list','grammar.py',152),
  ('var_list -> var_list , VAR','var_list',3,'p_var_list','grammar.py',153),
  ('e_list -> e','e_list',1,'p_e_list','grammar.py',160),
  ('e_list -> e_list , e','e_list',3,'p_e_list','grammar.py',161),
  ('e -> ID','e',1,'p_e1','grammar.py',168),
  ('e -> REAL','e',1,'p_e1','grammar.py',169),
  ('e -> INTEIRO','e',1,'p_e1','grammar.py',170),
  ('e -> CARACTER','e',1,'p_e1','grammar.py',171),
  ('e -> condicao','e',1,'p_e1','grammar.py',172),
  ('e -> - e','e',2,'p_e1','grammar.py',173),
  ('e -> e * e','e',3,'p_e2','grammar.py',180),
  ('e -> e / e','e',3,'p_e2','grammar.py',181),
  ('e -> e + e','e',3,'p_e2','grammar.py',182),
  ('e -> e - e','e',3,'p_e2','grammar.py',183),
  ('e -> logico','e',1,'p_e3','grammar.py',187),
  ('e -> e OR e','e',3,'p_e3','grammar.py',188),
  ('e -> e AND e','e',3,'p_e3','grammar.py',189),
  ('e -> e XOR e','e',3,'p_e3','grammar.py',190),
  ('e -> ( e )','e',3,'p_e4','grammar.py',197),
  ('condicao -> e SMALLER e','condicao',3,'p_condicao','grammar.py',201),
  ('condicao -> e SMALLER_EQUAL e','condicao',3,'p_condicao','grammar.py',202),
  ('condicao -> e BIGGER e','condicao',3,'p_condicao','grammar.py',203),
  ('condicao -> e BIGGER_EQUAL e','condicao',3,'p_condicao','grammar.py',204),
  ('condicao -> e EQUAL e','condicao',3,'p_condicao','grammar.py',205),
  ('condicao -> e NOT_EQUAL e','condicao',3,'p_condicao','grammar.py',206),
  ('logico -> TRUE','logico',1,'p_l1','grammar.py',217),
  ('logico -> FALSE','logico',1,'p_l2','grammar.py',221),
  ('logico -> NOT logico','logico',2,'p_l3','grammar.py',225),
]
