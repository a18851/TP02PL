Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALEATORIO
    COMENTARIO
    COMENTARIO_MULTILINHA
    ELIPSIS
    EM
    ENTRADA
    FAZER
    FIM
    PARA
    VAR

Grammar

Rule 0     S' -> S
Rule 1     S -> LstV ;
Rule 2     LstV -> LstV ; Inst
Rule 3     LstV -> Inst
Rule 4     Inst -> V
Rule 5     Inst -> ESCREVER E
Rule 6     Inst -> ESCREVER STRING
Rule 7     V -> IDENTIFICADOR ATRIBUICAO E
Rule 8     E -> E + E
Rule 9     E -> E - E
Rule 10    E -> E * E
Rule 11    E -> E : E
Rule 12    E -> - E
Rule 13    E -> ( E )
Rule 14    E -> NUMERO
Rule 15    E -> IDENTIFICADOR

Terminals, with rules where they appear

(                    : 13
)                    : 13
*                    : 10
+                    : 8
-                    : 9 12
:                    : 11
;                    : 1 2
ALEATORIO            : 
ATRIBUICAO           : 7
COMENTARIO           : 
COMENTARIO_MULTILINHA : 
ELIPSIS              : 
EM                   : 
ENTRADA              : 
ESCREVER             : 5 6
FAZER                : 
FIM                  : 
IDENTIFICADOR        : 7 15
NUMERO               : 14
PARA                 : 
STRING               : 6
VAR                  : 
error                : 

Nonterminals, with rules where they appear

E                    : 5 7 8 8 9 9 10 10 11 11 12 13
Inst                 : 2 3
LstV                 : 1 2
S                    : 0
V                    : 4

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . LstV ;
    (2) LstV -> . LstV ; Inst
    (3) LstV -> . Inst
    (4) Inst -> . V
    (5) Inst -> . ESCREVER E
    (6) Inst -> . ESCREVER STRING
    (7) V -> . IDENTIFICADOR ATRIBUICAO E

    ESCREVER        shift and go to state 5
    IDENTIFICADOR   shift and go to state 6

    S                              shift and go to state 1
    LstV                           shift and go to state 2
    Inst                           shift and go to state 3
    V                              shift and go to state 4

state 1

    (0) S' -> S .



state 2

    (1) S -> LstV . ;
    (2) LstV -> LstV . ; Inst

    ;               shift and go to state 7


state 3

    (3) LstV -> Inst .

    ;               reduce using rule 3 (LstV -> Inst .)


state 4

    (4) Inst -> V .

    ;               reduce using rule 4 (Inst -> V .)


state 5

    (5) Inst -> ESCREVER . E
    (6) Inst -> ESCREVER . STRING
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    STRING          shift and go to state 9
    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 8

state 6

    (7) V -> IDENTIFICADOR . ATRIBUICAO E

    ATRIBUICAO      shift and go to state 14


state 7

    (1) S -> LstV ; .
    (2) LstV -> LstV ; . Inst
    (4) Inst -> . V
    (5) Inst -> . ESCREVER E
    (6) Inst -> . ESCREVER STRING
    (7) V -> . IDENTIFICADOR ATRIBUICAO E

    $end            reduce using rule 1 (S -> LstV ; .)
    ESCREVER        shift and go to state 5
    IDENTIFICADOR   shift and go to state 6

    Inst                           shift and go to state 15
    V                              shift and go to state 4

state 8

    (5) Inst -> ESCREVER E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    ;               reduce using rule 5 (Inst -> ESCREVER E .)
    +               shift and go to state 16
    -               shift and go to state 17
    *               shift and go to state 18
    :               shift and go to state 19


state 9

    (6) Inst -> ESCREVER STRING .

    ;               reduce using rule 6 (Inst -> ESCREVER STRING .)


state 10

    (12) E -> - . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 20

state 11

    (13) E -> ( . E )
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 21

state 12

    (14) E -> NUMERO .

    +               reduce using rule 14 (E -> NUMERO .)
    -               reduce using rule 14 (E -> NUMERO .)
    *               reduce using rule 14 (E -> NUMERO .)
    :               reduce using rule 14 (E -> NUMERO .)
    ;               reduce using rule 14 (E -> NUMERO .)
    )               reduce using rule 14 (E -> NUMERO .)


state 13

    (15) E -> IDENTIFICADOR .

    +               reduce using rule 15 (E -> IDENTIFICADOR .)
    -               reduce using rule 15 (E -> IDENTIFICADOR .)
    *               reduce using rule 15 (E -> IDENTIFICADOR .)
    :               reduce using rule 15 (E -> IDENTIFICADOR .)
    ;               reduce using rule 15 (E -> IDENTIFICADOR .)
    )               reduce using rule 15 (E -> IDENTIFICADOR .)


state 14

    (7) V -> IDENTIFICADOR ATRIBUICAO . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 22

state 15

    (2) LstV -> LstV ; Inst .

    ;               reduce using rule 2 (LstV -> LstV ; Inst .)


state 16

    (8) E -> E + . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 23

state 17

    (9) E -> E - . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 24

state 18

    (10) E -> E * . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 25

state 19

    (11) E -> E : . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (11) E -> . E : E
    (12) E -> . - E
    (13) E -> . ( E )
    (14) E -> . NUMERO
    (15) E -> . IDENTIFICADOR

    -               shift and go to state 10
    (               shift and go to state 11
    NUMERO          shift and go to state 12
    IDENTIFICADOR   shift and go to state 13

    E                              shift and go to state 26

state 20

    (12) E -> - E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    +               reduce using rule 12 (E -> - E .)
    -               reduce using rule 12 (E -> - E .)
    *               reduce using rule 12 (E -> - E .)
    :               reduce using rule 12 (E -> - E .)
    ;               reduce using rule 12 (E -> - E .)
    )               reduce using rule 12 (E -> - E .)

  ! +               [ shift and go to state 16 ]
  ! -               [ shift and go to state 17 ]
  ! *               [ shift and go to state 18 ]
  ! :               [ shift and go to state 19 ]


state 21

    (13) E -> ( E . )
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    )               shift and go to state 27
    +               shift and go to state 16
    -               shift and go to state 17
    *               shift and go to state 18
    :               shift and go to state 19


state 22

    (7) V -> IDENTIFICADOR ATRIBUICAO E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    ;               reduce using rule 7 (V -> IDENTIFICADOR ATRIBUICAO E .)
    +               shift and go to state 16
    -               shift and go to state 17
    *               shift and go to state 18
    :               shift and go to state 19


state 23

    (8) E -> E + E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    +               reduce using rule 8 (E -> E + E .)
    -               reduce using rule 8 (E -> E + E .)
    :               reduce using rule 8 (E -> E + E .)
    ;               reduce using rule 8 (E -> E + E .)
    )               reduce using rule 8 (E -> E + E .)
    *               shift and go to state 18

  ! *               [ reduce using rule 8 (E -> E + E .) ]
  ! +               [ shift and go to state 16 ]
  ! -               [ shift and go to state 17 ]
  ! :               [ shift and go to state 19 ]


state 24

    (9) E -> E - E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    +               reduce using rule 9 (E -> E - E .)
    -               reduce using rule 9 (E -> E - E .)
    :               reduce using rule 9 (E -> E - E .)
    ;               reduce using rule 9 (E -> E - E .)
    )               reduce using rule 9 (E -> E - E .)
    *               shift and go to state 18

  ! *               [ reduce using rule 9 (E -> E - E .) ]
  ! +               [ shift and go to state 16 ]
  ! -               [ shift and go to state 17 ]
  ! :               [ shift and go to state 19 ]


state 25

    (10) E -> E * E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

    +               reduce using rule 10 (E -> E * E .)
    -               reduce using rule 10 (E -> E * E .)
    *               reduce using rule 10 (E -> E * E .)
    :               reduce using rule 10 (E -> E * E .)
    ;               reduce using rule 10 (E -> E * E .)
    )               reduce using rule 10 (E -> E * E .)

  ! +               [ shift and go to state 16 ]
  ! -               [ shift and go to state 17 ]
  ! *               [ shift and go to state 18 ]
  ! :               [ shift and go to state 19 ]


state 26

    (11) E -> E : E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E
    (11) E -> E . : E

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 11 (E -> E : E .)
    )               reduce using rule 11 (E -> E : E .)
    +               shift and go to state 16
    -               shift and go to state 17
    *               shift and go to state 18
    :               shift and go to state 19

  ! +               [ reduce using rule 11 (E -> E : E .) ]
  ! -               [ reduce using rule 11 (E -> E : E .) ]
  ! *               [ reduce using rule 11 (E -> E : E .) ]
  ! :               [ reduce using rule 11 (E -> E : E .) ]


state 27

    (13) E -> ( E ) .

    +               reduce using rule 13 (E -> ( E ) .)
    -               reduce using rule 13 (E -> ( E ) .)
    *               reduce using rule 13 (E -> ( E ) .)
    :               reduce using rule 13 (E -> ( E ) .)
    ;               reduce using rule 13 (E -> ( E ) .)
    )               reduce using rule 13 (E -> ( E ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 26 resolved as shift
WARNING: shift/reduce conflict for - in state 26 resolved as shift
WARNING: shift/reduce conflict for * in state 26 resolved as shift
WARNING: shift/reduce conflict for : in state 26 resolved as shift
